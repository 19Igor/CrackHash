version: "3"
services:
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: user
    ports:
      - "5672:5672"
      - "15672:15672"
    hostname: rabbit
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - main
  
  worker-service:
     build:
       context: ./MultiThreadCrackHash/WorkerProject/Worker
       dockerfile: Dockerfile
     ports:
       - "8081:8081"
     restart: always
     networks:
       - main

  manager-service:
    build: 
      context: ./MultiThreadCrackHash/ManagerProject/Manager
      dockerfile: Dockerfile
    ports: 
      - "8080:8080"
    restart: always
    networks:
      - main
    depends_on:
      rabbitmq:
        condition: service_healthy
      primary:
        condition: service_healthy
    #environment:
    #  - LOGGING_LEVEL_ROOT=DEBUG

  primary:
    image: mongo:latest
    container_name: primary
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongodb1:27017',priority:1},{_id:1,host:'mongodb2:27018',priority:0.5},{_id:2,host:'mongodb3:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 20s
      retries: 20
    ports:
      - 27017:27017
    volumes:
      - mongodb1_data:/data/db
      - mongodb1_config:/data/configdb
    networks:
      - main

  secondary1:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    ports:
      - "27018:27018"
    volumes:
      - "mongodb2_data:/data/db"
      - "mongodb2_config:/data/configdb"
    networks:
      - main
  
  secondary2:
    image: mongo:latest
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27019" ]
    ports:
      - "27019:27019"
    volumes:
      - "mongodb3_data:/data/db"
      - "mongodb3_config:/data/configdb"
    networks:
      - main
    


volumes:
  mongodb1_data:
  mongodb1_config:
  mongodb2_data:
  mongodb2_config:
  mongodb3_data:
  mongodb3_config:

networks:
  main:
    driver: bridge

